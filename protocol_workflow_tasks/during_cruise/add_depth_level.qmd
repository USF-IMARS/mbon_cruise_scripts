---
title: "Add Depth Level"
author: "Sebastian Di Geronimo"
format: html
editor: source
---

# WIP: modify to be more generalized

# Create a Lists of Samples Collected to Send to NOAA
They have requested we create a spreadsheet with sample station and qualitative
depth (surface, mid, bottom) for and combine all sample types collected with an
"x". 

We collect chl-a spectra, HPLC, CDOM and eDNA on every cruise so at least these
many columns are needed. BB3 and Rrs may be included if taken on this cruise.

```{r setup}
if (!nzchar(system.file(package = "librarian"))) 
  install.packages("librarian")

librarian::shelf(
  quiet = TRUE,
  librarian, 
  tidyverse, here, readxl, fs, magrittr, janitor, glue
)

source(here("scripts", "misc_functions.R"))

```


## Cruise File Path
```{r}
# hard coded
cruise_path <- 
  here("C:/Users", "imars_cruise", "Documents", "s_fl_cruise_data") %>% 
  dir_ls(regexp  = "fknms",
         recurse = 2) %>% 
  str_subset("~", negate = TRUE) %T>% 
  print()

# select using FileExplorer
cruise_path <- 
  here("C:/Users", "imars_cruise", "Documents", "s_fl_cruise_data") %>% 
  rstudioapi::selectFile(path = .) %T>% 
  print()

if (length(cruise_path) > 1) {
  cruise_path <- cruise_path[menu(basename(cruise_path))]
}
```


## Chla, HPLC, CDOM samples
```{r}
sample_collect <-
  (readxl::excel_sheets(cruise_path)) %>% 
  str_subset("field") %>% 
  read_excel(
    path  = cruise_path,
    sheet = .,
    .name_repair = janitor::make_clean_names
  ) %>% 
  # filter(!is.na(station)) %>%
  mutate(temp_depth = if_else(is.na(depth_m), 0, depth_m)) %>%
  filter(!is.na(vol_ml)) %>% 
# --- probably not needed
  # filter(
    # .by = c(station, temp_depth),
    # !any(is.na(date_mm_dd_yy))
    # & !any(is.na(sample_collection_time_gmt))
  # )
# ---

  mutate(
    .before   = 1,
    collected = str_extract(identifier, "\\w{1,2}\\d{4,5}"),
    collected = glue::glue("{collected}-{station}-{depth_level}"),
    collected = str_replace(collected, "LK", "21/LK"),
    x         = "x"
  ) %>% 
  # --- may remove if don't want number of samples taken per type
  # i.e. chl-a "x (2)" vs "x"
  # mutate(
  #   .by = c(station, depth_m, sample_type),
  #   x   = glue::glue("{x} ({n()})"),
  #   x   = str_remove(x, " \\(1\\)")
  # ) %>%
  # ---
  distinct(collected, x, station, depth_m, sample_type) %>% 
  pivot_wider(
    names_from  = sample_type,
    values_from = x
  ) %>% 
  select(collected, last_col(2):last_col()) %T>%
  print()
```


## eDNA
```{r}
edna_collect <-
  (readxl::excel_sheets(cruise_path)) %>% 
  str_subset("(?i)edna") %>% 
  read_excel(
    path  = cruise_path,
    sheet = .,
    .name_repair = janitor::make_clean_names
  ) %>% 
  select(1:contains("note")) %>% 
  filter(!is.na(vol_ml)) %>% 
  mutate(sample_type = "eDNA") %>%
  # filter(!is.na(station) & !str_detect(station, "0")) %>%
  # mutate(
  #   temp_depth  = if_else(is.na(depth_m), 0, depth_m),
  #   sample_type = "eDNA"
  # ) %>%
  # filter(
  #   .by = c(station, temp_depth),
  #   !any(is.na(mm_dd_yy)) 
  #   & !any(is.na(time_gmt))
  # ) %>% 
  mutate(
    .before     = 1,
    # depth_level = if_else(
    #   str_detect(depth_level, "0"),
    #   NA,
    #   depth_level),
    collected   = str_extract(sample, "\\w{1,2}\\d{4,5}"),
    collected   = glue::glue("{collected}-{station}-{depth_level}", .na = ""),
    collected   = str_replace(collected, "LK", "LK/21"),
    x = "x"
  ) %>% 
  # --- may remove if don't want number of samples taken per type
  # mutate(
  #   .by = c(station, depth_m),
  #   x   = glue::glue("{x} ({n()})", .na = ""),
  #   x   = str_remove(x, " \\(1\\)")
  # ) %>% 
  # ---
  distinct(collected, x, station, depth_m, sample_type) %>% 
  pivot_wider(
    names_from  = sample_type,
    values_from = x
  ) %>% 
  select(collected, last_col()) %T>%
  print()
```

## Join Both Sheets
```{r}
both_sheets <- 
  full_join(
    sample_collect,
    edna_collect
    ) %>% 
  filter(!str_detect(collected, "(?i)blank")) %T>%
  print()
```


# Save collected samples
```{r save-collected}
overwrite <- 0
cruise_id <-
  cruise_path %>% 
  str_extract("\\w{1,2}\\d{4,5}")

file_name <-
  here("C:/Users", "imars_cruise", "Documents",
       "s_fl_cruise_data", 
        cruise_id, "metadata", 
        glue("imars_samples_collected_{cruise_id}.xlsx") )

if (!file_exists(file_name)) {
  openxlsx::write.xlsx(
    x         = both_sheets, 
    file      = file_name, 
    overwrite = FALSE
    )

  shell.exec(file_name)
  
} else {
  message("File already exists.")
  cli::cli_alert_warning("Do you want to overwrite?\n")
  overwrite <- 
    menu(c("Yes", "No"), title = "[Select 1 = Yes or 2 = No in console]")
}

if (overwrite == 1) {
  cli::cli_alert_info("Overwriting Previous File!")
  openxlsx::write.xlsx(
    x = both_sheets, 
    file = file_name, 
    overwrite = TRUE)
  
  shell.exec(file_name)
}

```
## WIP: Add <cruise id>-<station>-<qualitative depth> to Older Files

```{r}
{
cli::cli_alert_danger("Proceed if you know what you are doing.")
stop("\r      ")
}
```


```{r}
# rstudioapi::selectFile()

dat <-
  here(cloud_dir) %>%
  dir_ls(regexp = "imars_inventory") %>%
  str_subset("~", negate = TRUE) %>%
  read_xlsx(
    sheet = 6,
    guess_max = 9000
    ) %>%
  arrange(date_mm_dd_yy)

dat2 <- 
  dat %>% 
  count(
    year, cruise_id, station, depth_m, sample_type, date_time
  ) %>% 
  arrange(desc(n)) %>%
  filter(!str_detect(sample_type, "(?i)dna|fcm|sterivex|blank|phyto")) %>%
  pivot_wider(
    data         = .,
    id_cols      = c(cruise_id, station, depth_m, date_time), # *optional* vector of unaffected columns,
    names_from   = c(sample_type), # category column(s) to pivot wide
    values_from  = c(n), # value column(s) that hold data for each category column
    names_sep    = "_",
    names_repair = janitor::make_clean_names
    ) 
  

```



```{r}
depths <- c("Surface", "Mid", "Bottom")

dat_rank <-
  dat2 %>%
  mutate(
    .after = depth_m,
    .by = c(cruise_id, station, date_time),
      cruise_id = 
      case_when(
        str_detect(cruise_id, "SV18067") ~ "SAV1803",
        str_detect(cruise_id, "SV18173") ~ "SAV18173",
        str_detect(cruise_id, "WS20230") ~ "WS20231",
        .default = cruise_id
      ),
    # station = str_replace(station, "LK", "LK/21"),
    
    depth_m = if_else(is.na(depth_m), 1, depth_m),
    depth_rank = dense_rank(depth_m),
    depth_level = case_when(
      n() == 1 & depth_m < 6 ~ depths[1], # surface
      n() == 1 & depth_m >= 6 ~ depths[3], # bottom
      n() == 2 & depth_rank == 1 & depth_m < 6 ~ depths[1], # surface
      n() == 2 & depth_rank == 2 & depth_m >= 5 ~ depths[3], # bottom
      n() == 2 & depth_rank == 2 & depth_m >= 4.3 & str_detect(station, "MR") ~ depths[3], # bottom
      n() == 3 & depth_rank == 2 ~ depths[2], # "Mid",
      n() == 3 & depth_rank == 1 ~ depths[1], # "surf",
      n() == 3 & depth_rank == 3 ~ depths[3], #"bott",
      .default = "idk"
    ),
    
    depth_level = 
      if_else(
        str_detect(cruise_id, "WS18285") 
        & str_detect(station, "TB6") 
        & depth_m > 3,
        depths[3],
        depth_level,        
      ),

    depth_level = 
      if_else(
        str_detect(cruise_id, "WS19210") 
        & str_detect(station, "GP1") 
        & depth_m > 3,
        depths[3],
        depth_level,        
      ),
    
    sample_info = glue::glue("{cruise_id}-{station}-{depth_level}"),
    
    across(
      chl_a:cdom,
      ~if_else(!is.na(.), "x", NA)
    )
    
  
    
    
  ) %T>%
    View()

dat_rank %>%
  filter(.by = c(cruise_id, station),
         n() == 2 ) #%>%
         arrange(date_time, cruise_id,  station)

```

Notes for fixed samples:
SV18067 
  - check WS, depths are 2 and 4.8 (probably 48?)
SV18173 
  - check MR, depths are 1.6 and 4.4 (probably 44?)
WS18285 
  - check TB6 depth, one is 2 other is 4, checks out from NOAA log
WS18351
  - check 7, depths are 1.9 and 1.5
WS19210 
  - check 68, depth are 2 and 2.4,
  - check dates, they are different too, Jul 30 and Aug 2
  - check GP1, depths are 1.84 and 3.32 - checks out from NOAA log
WS21277
  - check MR, depths are 1 and 4.3, probably bottom was NA and marked as 1

```{r}
dat %>% 
  # two samples issues with duplication
  filter(!str_detect(identifier, "WS23011-180|SV18067-CK")) %>% 
  # one cruise issues with identifier duplication
  filter(!str_detect(base, "(?i)aug2015")) %>% 
  left_join(dat_rank) %>% 
  janitor::get_dupes(identifier)
```

```{r}
date_range <- 
  range(dat_rank$date_time, na.rm = TRUE) %>%
  format(
   "%Y_%b" 
  ) %>%
  str_c(collapse = "_")

dat_rank %>%
  filter(!str_detect(cruise_id, "FK")) %>%
  select(sample_info, chl_a:cdom) %>%
  save_csv(
    .data          = .,
    # save_location  = here(),
    save_location  = cloud_dir,
    save_name      = glue("imars_samples_collected_list_{date_range}"),
    overwrite      = FALSE,
    verbose        = TRUE,
    time_stamp_fmt = NULL
  )
```


